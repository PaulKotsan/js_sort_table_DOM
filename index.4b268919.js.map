{"mappings":"ACEA,IAAM,EAAe,SAAS,aAAa,CAAC,SAmC5C,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAZmB,EACb,EAWA,EAAc,EAAE,MAAM,CAAC,SAAS,CACjB,EAAE,MAAM,CAAC,OAAO,CAAC,WAbnB,EApBZ,AAuCW,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,uBAvC3C,IAAI,CAAC,SAAC,CAAA,CAAG,CAArB,EAEE,IAAI,EAAO,EAAE,KAAK,CAsCmB,EAtCZ,CAAC,WAAW,CAAC,IAAI,GACtC,EAAO,EAAE,KAAK,CAqCmB,EArCZ,CAAC,WAAW,CAAC,IAAI,UAG1C,AAAI,AAAU,IAkCuB,GAlClB,AAAU,IAkCQ,GAjCnC,EAAO,EAAK,WAAW,GACvB,EAAO,EAAK,WAAW,GAEhB,EAAK,aAAa,CAAC,IAKrB,AAHP,CAAA,EAAO,SAAS,EAAK,OAAO,CAAC,WAAY,IAAzC,EACA,CAAA,EAAO,SAAS,EAAK,OAAO,CAAC,WAAY,IAAzC,CAGF,GAOA,CAFM,EAAY,EAAa,aAAa,CAAC,UAEnC,SAAS,CAAG,GAEtB,EAAW,OAAO,CAAC,SAAC,CAApB,EACE,EAAU,WAAW,CAAC,EACxB,GAgBF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tableToClick = document.querySelector(\"table\");\n// !! POSSIBLY DONE\nfunction sortList(list, index) {\n    return list.sort(function(a, b) {\n        // extract contents\n        var valA = a.cells[index].textContent.trim();\n        var valB = b.cells[index].textContent.trim();\n        // If it's names columns\n        if (index !== 3 && index !== 2) {\n            valA = valA.toLowerCase();\n            valB = valB.toLowerCase();\n            return valA.localeCompare(valB);\n        }\n        valA = parseInt(valA.replace(/[^0-9.]/g, \"\"));\n        valB = parseInt(valB.replace(/[^0-9.]/g, \"\"));\n        return valA - valB;\n    });\n}\n// ! DONE\nfunction updateTable(sortedRows) {\n    var tableBody = tableToClick.querySelector(\"tbody\");\n    tableBody.innerHTML = \"\";\n    sortedRows.forEach(function(row) {\n        tableBody.appendChild(row);\n    });\n}\n// ! DONE\ndocument.addEventListener(\"click\", function(e) {\n    var columnIndex = e.target.cellIndex;\n    var tableHeaders = e.target.closest(\"table\");\n    if (!tableHeaders) return;\n    var tableRows = Array.from(document.querySelectorAll(\"table > tbody > tr\"));\n    var sortedRows = sortList(tableRows, columnIndex);\n    updateTable(sortedRows);\n});\n\n//# sourceMappingURL=index.4b268919.js.map\n","'use strict';\n\nconst tableToClick = document.querySelector('table');\n\n// !! POSSIBLY DONE\nfunction sortList(list, index) {\n  return list.sort((a, b) => {\n    // extract contents\n    let valA = a.cells[index].textContent.trim();\n    let valB = b.cells[index].textContent.trim();\n\n    // If it's names columns\n    if (index !== 3 && index !== 2) {\n      valA = valA.toLowerCase();\n      valB = valB.toLowerCase();\n\n      return valA.localeCompare(valB);\n    }\n    valA = parseInt(valA.replace(/[^0-9.]/g, ''));\n    valB = parseInt(valB.replace(/[^0-9.]/g, ''));\n\n    return valA - valB;\n  });\n}\n\n// ! DONE\nfunction updateTable(sortedRows) {\n  const tableBody = tableToClick.querySelector('tbody');\n\n  tableBody.innerHTML = '';\n\n  sortedRows.forEach((row) => {\n    tableBody.appendChild(row);\n  });\n}\n\n// ! DONE\ndocument.addEventListener('click', (e) => {\n  const columnIndex = e.target.cellIndex;\n  const tableHeaders = e.target.closest('table');\n\n  if (!tableHeaders) {\n    return;\n  }\n\n  const tableRows = Array.from(document.querySelectorAll('table > tbody > tr'));\n  const sortedRows = sortList(tableRows, columnIndex);\n\n  updateTable(sortedRows);\n});\n"],"names":["tableToClick","document","querySelector","addEventListener","e","sortedRows","tableBody","columnIndex","target","cellIndex","closest","list","Array","from","querySelectorAll","sort","a","b","valA","cells","textContent","trim","valB","index","toLowerCase","localeCompare","parseInt","replace","innerHTML","forEach","row","appendChild"],"version":3,"file":"index.4b268919.js.map"}